//
//  CropInteractor.swift
//  MotorImages
//
//  Created by iris on 05/07/20.
//  Copyright (c) 2020 iris. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CropBusinessLogic
{
  func displayImageToCrop(request: Crop.Something.Request)
	func cropImage(request: Crop.CropImage.Request)
}

protocol CropDataStore
{
  var originalImage: UIImage? { get set }
	var originalImageCG : CGImage? { get set}
	var croppedImage : Data? {get set}

}

class CropInteractor: CropBusinessLogic, CropDataStore
{
	var originalImageCG: CGImage?
	var croppedImage: Data?
	
	func cropImage(request: Crop.CropImage.Request) {
		let image = request.originalImage
		let imageRef = request.originalImageCG
		let cutFrame = request.cutFrame
		if let cropRef = imageRef.cropping(to: cutFrame) {
			let resultImage: UIImage = UIImage(cgImage: cropRef, scale: image.scale, orientation: image.imageOrientation)
			croppedImage = resultImage.compressed()
		}else{
		}
		presenter?.cropFinished()
	}
	
	var originalImage: UIImage?
  var presenter: CropPresentationLogic?
  
  // MARK: Do something
  
  func displayImageToCrop(request: Crop.Something.Request)
  {
	let response = Crop.Something.Response(imagenRecibida: originalImage!, imagenRecibidaCG: originalImageCG!)
    presenter?.presentImageToCrop(response: response)
  }
}
