//
//  DocumentRouter.swift
//  MotorImages
//
//  Created by iris on 05/07/20.
//  Copyright (c) 2020 iris. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

 protocol DocumentRoutingLogic
{
	func routeToCropView()
	func finishProcess()
}

protocol DocumentDataPassing
{
  var dataStore: DocumentDataStore? { get }

}

class DocumentRouter: NSObject, DocumentRoutingLogic, DocumentDataPassing
{
	func finishProcess() {
		let doc  = Document(documentType: .documentDefault, compressed: dataStore?.croppedImage)
		viewController?.delegate?.captureDidFinishWithDocument(doc, captureVC: viewController!)
	}
	  weak var viewController: DocumentViewController?
		var dataStore: DocumentDataStore?
  
  // MARK: Routing

  func routeToCropView()
  {
	let bundle = Bundle(for: DocumentViewController.self)
	let destinationCropView = UIStoryboard(name: "DocumentCamera", bundle: bundle).instantiateViewController(identifier: "cropView") as CropViewController
	
		var destinationCropViewDataStore = destinationCropView.router!.dataStore!
		passDataToCropper(source: dataStore!, destination: &destinationCropViewDataStore)
		presentCropView(source: self.viewController!, destination: destinationCropView)
  }

  // MARK: Navigation
  
  func presentCropView(source: DocumentViewController, destination: CropViewController)
  {
	source.navigationController?.pushViewController(destination, animated: true)
	//source.present(destination, animated: true, completion: nil)
  }
  
  // MARK: Passing data
  
  func passDataToCropper(source: DocumentDataStore, destination: inout CropDataStore){
		destination.originalImage = source.originalImage
	destination.originalImageCG	= source.originalImageCG
  }
	
}
